2025-03-07T02:38:22.490+03:30  INFO 2092 --- [spring_jpa_cache] [main] c.s.SpringJpaCacheApplicationTests       : Starting SpringJpaCacheApplicationTests using Java 17.0.12 with PID 2092 (started by Ahmad in C:\Users\Ahmad\Desktop\spring_jpa_cache)
2025-03-07T02:38:22.490+03:30  INFO 2092 --- [spring_jpa_cache] [main] c.s.SpringJpaCacheApplicationTests       : The following 1 profile is active: "dev"
2025-03-07T02:38:24.180+03:30  INFO 2092 --- [spring_jpa_cache] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-07T02:38:24.208+03:30  INFO 2092 --- [spring_jpa_cache] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-07T02:38:24.286+03:30  INFO 2092 --- [spring_jpa_cache] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.spring_jpa_cache.repository.UserPhotoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-03-07T02:38:24.315+03:30  INFO 2092 --- [spring_jpa_cache] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 93 ms. Found 4 JPA repository interfaces.
2025-03-07T02:38:24.329+03:30  INFO 2092 --- [spring_jpa_cache] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-07T02:38:24.329+03:30  INFO 2092 --- [spring_jpa_cache] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-07T02:38:24.339+03:30  INFO 2092 --- [spring_jpa_cache] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.spring_jpa_cache.repository.DepartmentRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-03-07T02:38:24.339+03:30  INFO 2092 --- [spring_jpa_cache] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.spring_jpa_cache.repository.PermissionRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-03-07T02:38:24.339+03:30  INFO 2092 --- [spring_jpa_cache] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.spring_jpa_cache.repository.RoleRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-03-07T02:38:24.339+03:30  INFO 2092 --- [spring_jpa_cache] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.spring_jpa_cache.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2025-03-07T02:38:24.349+03:30  INFO 2092 --- [spring_jpa_cache] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 1 MongoDB repository interface.
2025-03-07T02:38:24.365+03:30  INFO 2092 --- [spring_jpa_cache] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-07T02:38:24.365+03:30  INFO 2092 --- [spring_jpa_cache] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-07T02:38:24.380+03:30  INFO 2092 --- [spring_jpa_cache] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.spring_jpa_cache.repository.DepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-07T02:38:24.380+03:30  INFO 2092 --- [spring_jpa_cache] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.spring_jpa_cache.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-07T02:38:24.380+03:30  INFO 2092 --- [spring_jpa_cache] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.spring_jpa_cache.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-07T02:38:24.380+03:30  INFO 2092 --- [spring_jpa_cache] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.spring_jpa_cache.repository.UserPhotoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-07T02:38:24.380+03:30  INFO 2092 --- [spring_jpa_cache] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.spring_jpa_cache.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-07T02:38:24.380+03:30  INFO 2092 --- [spring_jpa_cache] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-03-07T02:38:25.892+03:30  INFO 2092 --- [spring_jpa_cache] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-07T02:38:26.010+03:30  INFO 2092 --- [spring_jpa_cache] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-07T02:38:26.127+03:30  INFO 2092 --- [spring_jpa_cache] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-03-07T02:38:26.443+03:30  INFO 2092 --- [spring_jpa_cache] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-07T02:38:26.475+03:30  INFO 2092 --- [spring_jpa_cache] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-03-07T02:38:26.614+03:30  INFO 2092 --- [spring_jpa_cache] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:spring_db user=SA
2025-03-07T02:38:26.614+03:30  INFO 2092 --- [spring_jpa_cache] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-03-07T02:38:26.633+03:30  WARN 2092 --- [spring_jpa_cache] [main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-07T02:38:26.657+03:30  INFO 2092 --- [spring_jpa_cache] [main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-07T02:38:27.310+03:30  INFO 2092 --- [spring_jpa_cache] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-07T02:38:27.355+03:30  INFO 2092 --- [spring_jpa_cache] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-07T02:38:29.684+03:30  INFO 2092 --- [spring_jpa_cache] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/17.0.12+8-LTS-286"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@430abcad], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@230ea983, com.mongodb.Jep395RecordCodecProvider@70290678, com.mongodb.KotlinCodecProvider@2c99419f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@26aecf31], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-03-07T02:38:29.684+03:30  INFO 2092 --- [spring_jpa_cache] [cluster-ClusterId{value='67ca2aeddde34b32d49109bc', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Exception in monitor thread while connecting to server localhost:27017

com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.lambda$open$0(SocketStream.java:85) ~[mongodb-driver-core-5.2.1.jar:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:85) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:233) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.lookupServerDescription(DefaultServerMonitor.java:219) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.run(DefaultServerMonitor.java:176) ~[mongodb-driver-core-5.2.1.jar:na]
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:633) ~[na:na]
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:76) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:104) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:79) ~[mongodb-driver-core-5.2.1.jar:na]
	... 3 common frames omitted

2025-03-07T02:38:30.247+03:30  WARN 2092 --- [spring_jpa_cache] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-07T02:38:30.331+03:30  INFO 2092 --- [spring_jpa_cache] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-07T02:38:30.331+03:30  WARN 2092 --- [spring_jpa_cache] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-07T02:38:31.752+03:30  INFO 2092 --- [spring_jpa_cache] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoints beneath base path '/actuator'
2025-03-07T02:38:31.926+03:30  INFO 2092 --- [spring_jpa_cache] [main] o.s.s.w.a.c.ChannelProcessingFilter      : Validated configuration attributes
2025-03-07T02:38:33.907+03:30  INFO 2092 --- [spring_jpa_cache] [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:spring_db'
2025-03-07T02:38:34.116+03:30  INFO 2092 --- [spring_jpa_cache] [main] c.s.SpringJpaCacheApplicationTests       : Started SpringJpaCacheApplicationTests in 11.907 seconds (process running for 12.825)
2025-03-07T02:38:34.293+03:30  INFO 2092 --- [spring_jpa_cache] [main] c.spring_jpa_cache.service.UserService   : Saving user: ali
2025-03-07T02:38:34.632+03:30  INFO 2092 --- [spring_jpa_cache] [main] c.spring_jpa_cache.service.UserService   : User saved with ID: 1
2025-03-07T02:38:34.632+03:30  INFO 2092 --- [spring_jpa_cache] [main] c.spring_jpa_cache.service.UserService   : Saving user: admin
2025-03-07T02:38:34.909+03:30  INFO 2092 --- [spring_jpa_cache] [main] c.spring_jpa_cache.service.UserService   : User saved with ID: 2
2025-03-07T02:38:35.436+03:30  INFO 2092 --- [spring_jpa_cache] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-07T02:38:35.445+03:30  INFO 2092 --- [spring_jpa_cache] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-03-07T02:38:35.445+03:30  INFO 2092 --- [spring_jpa_cache] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
